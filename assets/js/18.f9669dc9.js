(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{444:function(s,e,n){"use strict";n.r(e);var a=n(17),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"promise"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[s._v("#")]),s._v(" promise")]),s._v(" "),n("blockquote",[n("p",[s._v("异步编程的一种解决方案")])]),s._v(" "),n("h2",{attrs:{id:"e-g"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#e-g"}},[s._v("#")]),s._v(" e.g.")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    const asyncRequest = new Promise((resolve, reject) => {\n        //异步请求\n        http.get(url, function(res) {\n            if(res.code === 1) {\n                resolve(res.id)  \n            } else {\n                reject(res)\n            }\n        })\n    })\n    asyncRequest().then(res => {\n        console.log(res)\n    })\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h2",{attrs:{id:"特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[s._v("#")]),s._v(" 特性")]),s._v(" "),n("h3",{attrs:{id:"promise-状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise-状态"}},[s._v("#")]),s._v(" Promise 状态")]),s._v(" "),n("p",[s._v("Promise 有三种状态：等待态（Pending）、执行态（Fulfilled）和拒绝态（Rejected）。Promise对象的状态改变，只有两种可能：从pending变为fulfilled和从pending变为rejected，一旦Promise被resolve或reject，不能再迁移至其他任何状态（即状态 immutable）。")]),s._v(" "),n("h3",{attrs:{id:"then-回调异步执行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#then-回调异步执行"}},[s._v("#")]),s._v(" then 回调异步执行")]),s._v(" "),n("ul",[n("li",[s._v("Promise 实例化时传入的函数会立即执行，then(...) 中的回调需要异步延迟调用。")]),s._v(" "),n("li",[s._v("onFulfilled 和 onRejected 方法必须异步执行，且应该在 then 方法被调用的那一轮事件循环之后的新执行栈中执行。这个事件队列采用微任务 micro-task机制来实现。")])]),s._v(" "),n("h2",{attrs:{id:"内部实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内部实现"}},[s._v("#")]),s._v(" 内部实现")]),s._v(" "),n("h3",{attrs:{id:"promise-构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise-构造函数"}},[s._v("#")]),s._v(" Promise 构造函数")]),s._v(" "),n("ol",[n("li",[s._v("初始化 Promise 状态（pending）")]),s._v(" "),n("li",[s._v("初始化 then(..) 注册回调处理数组（then 方法可被同一个 promise 调用多次）")]),s._v(" "),n("li",[s._v("立即执行传入的 fn 函数，传入Promise 内部 resolve、reject 函数")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    function Promise (fn) {\n      // promise 状态变量\n      // 0 - pending\n      // 1 - resolved\n      // 2 - rejected\n      this._state = 0;\n      // promise 执行结果\n      this._value = null;\n     \n      // then(..) 注册回调处理数组\n      this._deferreds = [];\n\n      function resolve(value) {\n        // TODO\n      }\n\n      function reject(reason) {\n        // TODO\n      }\n\n      // 立即执行 fn 函数\n      try {\n        fn(resolve,reject)\n      } catch (err) {\n        // 处理执行 fn 异常\n        reject(err);\n      }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h3",{attrs:{id:"then-函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#then-函数"}},[s._v("#")]),s._v(" then 函数")]),s._v(" "),n("ol",[n("li",[s._v("实例化空 promise 对象用来返回（保持then链式调用）")]),s._v(" "),n("li",[s._v("构造 then(..) 注册回调处理函数结构体")]),s._v(" "),n("li",[s._v("判断当前 promise 状态，pending 状态存储延迟处理对象 deferred ，非pending状态执行 onResolved 或 onRejected 回调")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    Promise.prototype.then = function (onResolved, onRejected) {\n      // 实例化空 promise 对象用来返回\n      var res = new Promise(function () {});\n\n      // Handler 函数封装存储 onResolved、onRejected 函数和新生成 promise 对象。\n      function Handler (onResolved, onRejected, promise) {\n          this.onResolved = typeof onResolved === 'function' ? onResolved : null;\n          this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n          this.promise = promise;\n      }\n\n      // 使用 onResolved，onRejected 实例化处理对象 Handler\n      var deferred = new Handler(onResolved, onRejected, res);\n\n      // 当前状态为 pendding，存储延迟处理对象\n      if (this._state === 0) {\n        this._deferreds.push(deferred);\n        return res;\n      }\n\n      // 当前 promise 状态不为 pending\n      // 调用 handleResolved 执行onResolved或onRejected回调\n      handleResolved(this, deferred);\n      \n      // 返回新 promise 对象，维持链式调用\n      return res;\n    };\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("ul",[n("li",[s._v("链式调用需要返回新的 promise，而不直接返回 this 当前对象")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    // 假如 then 函数执行返回 this 调用对象本身，那么 promise2 === promise1，promise2 状态也应该等于 promise1 同为 resolved。而 onResolved 回调中返回状态为 rejected 对象。考虑到 Promise 状态一旦 resolved 或 rejected就不能再迁移，所以这里 promise2 也没办法转为回调函数返回的 rejected 状态，产生矛盾。\n\n    var promise2 = promise1.then(function (value) {\n      return Promise.reject(3)\n    })\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"resolve-函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resolve-函数"}},[s._v("#")]),s._v(" resolve 函数")]),s._v(" "),n("blockquote",[n("p",[s._v("Promise 实例化时立即执行传入的 fn 函数，同时传递内部 resolve 函数作为参数用来改变 promise 状态。resolve 函数简易版逻辑大概为：判断并改变当前 promise 状态，存储 resolve(..) 的 value 值。判断当前是否存在 then(..) 注册回调执行函数，若存在则依次异步执行 onResolved 回调。")])]),s._v(" "),n("ul",[n("li",[s._v("如果 promise 和 value 指向同一对象，拒绝执行 promise")]),s._v(" "),n("li",[s._v("如果 value 为 Promise ，则使 promise 接受 value 的状态")]),s._v(" "),n("li",[s._v("如果 value 为对象或函数\n"),n("ol",[n("li",[s._v("把 value.then 赋值给 then")]),s._v(" "),n("li",[s._v("如果取 value.then 的值时抛出错误 e ，拒绝执行 promise")]),s._v(" "),n("li",[s._v("如果 then 是函数，将 value 作为函数的作用域 this 调用之。")]),s._v(" "),n("li",[s._v("如果 value 不为对象或者函数，以 value 为参数执行 promise")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    function resolve (promise, value) {\n      // 非 pending 状态不可变\n      if (promise._state !== 0) return;\n      \n      // promise 和 value 指向同一对象\n      if (value === promise) {\n        return reject( promise, new TypeError('A promise cannot be resolved with itself.') );\n      }\n      \n      // 如果 value 为 Promise，则使 promise 接受 value 的状态\n      if (value && value instanceof Promise && value.then === promise.then) {\n        var deferreds = promise._deferreds\n        \n        if (value._state === 0) {\n          // value 为 pending 状态\n          // 将 promise._deferreds 传递 value._deferreds\n          value._deferreds.push(...deferreds)\n        } else if (deferreds.length !== 0) {\n          // value 为 非pending 状态\n          // 使用 value 作为当前 promise，执行 then 注册回调处理\n          for (var i = 0; i < deferreds.length; i++) {\n            handleResolved(value, deferreds[i]);\n          }\n          // 清空 then 注册回调处理数组\n          value._deferreds = [];\n        }\n        return;\n      }\n\n      // value 是对象或函数\n      if (value && (typeof value === 'object' || typeof value === 'function')){\n          var then = obj.then;\n        } catch (err) {\n          return reject(promise, err);\n        }\n\n      // 如果 then 是函数，将 value 作为函数的作用域 this 调用之\n        if (typeof then === 'function') {\n          try {\n            // 执行 then 函数\n            then.call(value, function (value) {\n              resolve(promise, value);\n            }, function (reason) {\n              reject(promise, reason);\n            })\n          } catch (err) {\n            reject(promise, err);\n          }\n          return;\n        }\n      }\n      \n      // 改变 promise 内部状态为 `resolved`\n      promise._state = 1;\n      promise._value = value;\n\n      // promise 存在 then 注册回调函数\n      if (promise._deferreds.length !== 0) {\n        for (var i = 0; i < promise._deferreds.length; i++) {\n          handleResolved(promise, promise._deferreds[i]);\n        }\n        // 清空 then 注册回调处理数组\n        promise._deferreds = [];\n      }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br")])]),n("h3",{attrs:{id:"reject-函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reject-函数"}},[s._v("#")]),s._v(" reject 函数")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    function reject (promise, reason) {\n      // 非 pending 状态不可变\n      if (promise._state !== 0) return;\n\n      // 改变 promise 内部状态为 `rejected`\n      promise._state = 2;\n      promise._value = reason;\n\n      // 判断是否存在 then(..) 注册回调处理\n      if (promise._deferreds.length !== 0) {\n        // 异步执行回调函数\n        for (var i = 0; i < promise._deferreds.length; i++) {\n          handleResolved(promise, promise._deferreds[i]);\n        }\n        promise._deferreds = [];\n      }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"handleresolved-函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#handleresolved-函数"}},[s._v("#")]),s._v(" handleResolved 函数")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    function handleResolved (promise, deferred) {\n      // 异步执行注册回调\n      asyncFn(function () {\n        var cb = promise._state === 1 ? \n                deferred.onResolved : deferred.onRejected;\n\n        // 传递注册回调函数为空情况\n        if (cb === null) {\n          if (promise._state === 1) {\n            resolve(deferred.promise, promise._value);\n          } else {\n            reject(deferred.promise, promise._value);\n          }\n          return;\n        }\n\n        // 执行注册回调操作\n        try {\n          var res = cb(promise._value);\n        } catch (err) {\n          reject(deferred.promise, err);\n        }\n\n        // 处理链式 then(..) 注册处理函数调用\n        resolve(deferred.promise, res);\n      });\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),n("blockquote",[n("ul",[n("li",[s._v("Promise的实现过程，其主要使用了设计模式中的观察者模式")]),s._v(" "),n("li",[s._v("promise里面的then函数仅仅是注册了后续需要执行的代码，真正的执行是在resolve方法里面执行。")])])]),s._v(" "),n("ol",[n("li",[s._v("通过Promise.prototype.then和Promise.prototype.catch方法将观察者方法注册到被观察者Promise对象中，同时返回一个新的Promise对象，以便可以链式调用。")]),s._v(" "),n("li",[s._v("被观察者管理内部pending、fulfilled和rejected的状态转变，同时通过构造函数中传递的resolve和reject方法以主动触发状态转变和通知观察者。")])]),s._v(" "),n("h2",{attrs:{id:"promise-相关方法实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise-相关方法实现"}},[s._v("#")]),s._v(" Promise 相关方法实现")]),s._v(" "),n("h3",{attrs:{id:"promise-race"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise-race"}},[s._v("#")]),s._v(" Promise.race")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    Promise.race = function (values) {\n      return new Promise(function (resolve, reject) {\n        values.forEach(function(value) {\n          Promise.resolve(value).then(resolve, reject);\n        });\n      });\n    };\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"promise-all"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise-all"}},[s._v("#")]),s._v(" Promise.all")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    Promise.all = function(promises) {\n      let results = [];\n      let promiseCount = 0;\n      let promisesLength = promises.length;\n      return new Promise(function(resolve, reject) {\n        for (let i = 0; i < promises.length; i++) { // 使用let保证promise顺序执行\n          Promise.resolve(promises[i]).then(function(res) {\n            results[i] = res;\n            promiseCount++;\n            // 当所有函数都正确执行了，resolve输出所有返回结果。\n            if (promiseCount === promisesLength) {\n              resolve(results);\n            }\n          }, function(err) {\n            reject(err);\n          });\n        }\n      });\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.cn/post/6844903521284784142#heading-1",target:"_blank",rel:"noopener noreferrer"}},[s._v("解读Promise内部实现原理"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://mengera88.github.io/2017/05/18/Promise%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/",target:"_blank",rel:"noopener noreferrer"}},[s._v("30分钟，让你彻底明白Promise原理"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);