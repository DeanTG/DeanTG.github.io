(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{452:function(s,a,e){"use strict";e.r(a);var t=e(17),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[s._v("#")]),s._v(" 流程")]),s._v(" "),e("ol",[e("li",[s._v("引入jssdk")]),s._v(" "),e("li",[s._v("初始化sdk")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    // 首先通过接口请求获取初始化的sdk参数，接口请求的参数包含初始化当前sdk页面的url(url为锚点#前的全部参数，可以使用 location.href.split('#')[0] 去签名)\n    wx.config({\n        debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\n        appId: res.appId, // 必填，公众号的唯一标识\n        timestamp: res.timestamp, // 必填，生成签名的时间戳\n        nonceStr: res.nonceStr, // 必填，生成签名的随机串\n        signature: res.signature, // 必填，签名，见附录1\n        jsApiList: ['chooseWXPay'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2\n      });\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("在wx.ready()方法中使用jsApiList中的方法")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    wx.ready(() => {})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"jssdk-invalid-signature签名错误的解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jssdk-invalid-signature签名错误的解决方案"}},[s._v("#")]),s._v(" JSSDK invalid signature签名错误的解决方案")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421141115",target:"_blank",rel:"noopener noreferrer"}},[s._v("常见错误及解决方法"),e("OutboundLink")],1)]),s._v(" "),e("ul",[e("li",[s._v("补充\n** 服务端签名url的接口和调用skd的前端页面必须全部在公众号绑定的安全域名内\n** 微信支付必须指定支付页面的目录")])]),s._v(" "),e("h2",{attrs:{id:"vue-spa-使用jssdk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-spa-使用jssdk"}},[s._v("#")]),s._v(" vue spa 使用JSSDK")]),s._v(" "),e("ul",[e("li",[s._v("我路由使用的是hash模式，由于从公众号进入之后，经过微信oauth2授权之后，回调的地址的url之后会添加code和status等hash参数，spa应用携带hash参数的url去签名会造成invalid signature错误，可以在第一次进入页面，获取到相关参数之后，使用HTML5的history对象的replace方法不刷新页面更改\nurl")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    history.replaceState('', '', location.href.split('?')[0])\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);